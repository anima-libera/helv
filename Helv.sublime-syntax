%YAML 1.2
---
name: Helv
file_extensions:
  - helv
  - hv
scope: source.helv
version: 2

contexts:

  semicolon_compatible_main:
    - match: '#'
      scope: punctuation.definition.comment.begin.helv
      push: comment
    - match: '\['
      scope: punctuation.section.block.begin.helv punctuation.section.brackets.begin.helv
      push: semicolon_brackets
    - match: '\]'
      scope: invalid.illegal.helv

  main:
    - match: '\['
      scope: punctuation.section.block.begin.helv punctuation.section.brackets.begin.helv
      push: brackets
    - include: semicolon_compatible_main
    - match: '[0-9]+'
      scope: constant.numeric.value.helv
    - match: \'
      scope: punctuation.definition.string.begin.helv
      push: single_quoted_string
    - match: '\b(add|sub|subtract|mul|multiply|div|divide|mod|modulus)\b'
      scope: keyword.operator.arithmetic.helv
    - match: '\b(exe|execute)\b'
      scope: keyword.control.helv
    - match: '\b(ife|ifelse)\b'
      scope: keyword.control.conditional.if.helv
    - match: '\b(dwh|dowhile)\b'
      scope: keyword.control.loop.do-while.helv
    - match: '\b(rep|repeat)\b'
      scope: keyword.control.loop.for.helv
    - match: '\b(hlt|halt)\b'
      scope: keyword.control.flow.return.helv
    - match: '\b(hei|height)\b'
      scope: support.constant.helv
    - match: '\b(pri|print)\b'
      #scope: support.function.helv
    - match: '\b(cur|current|pre|previous|nex|next)\b'
      scope: support.constant.helv
    - match: ';;'
      scope: punctuation.section.block.begin.helv keyword.declaration.function.helv
      push: semicolon_mode
    - match: ';'
      scope: keyword.declaration.function.helv
      push: semicolon_word

  comment:
    - meta_scope: comment.block.helv
    - match: '#'
      scope: punctuation.definition.comment.end.helv
      pop: true

  brackets:
    - meta_scope: meta.block.helv meta.brackets.helv
    - match: '\]'
      scope: punctuation.section.block.end.helv punctuation.section.brackets.end.helv
      pop: true
    - include: main

  semicolon_brackets:
    - meta_scope: meta.block.helv meta.brackets.helv
    - match: '\]'
      scope: punctuation.section.block.end.helv punctuation.section.brackets.end.helv
      pop: true
    - match: ';;'
      scope: invalid.illegal.helv
    - include: semicolon_compatible_main
    - include: semicolon_chars

  semicolon_chars:
    - match: '[0-9]+'
      scope: constant.numeric.value.helv
    - match: '\+|\-|\*|\/|\%'
      scope: keyword.operator.arithmetic.helv
    - match: 'x'
      scope: keyword.control.helv
    - match: 'i'
      scope: keyword.control.conditional.if.helv
    - match: 'w'
      scope: keyword.control.loop.do-while.helv
    - match: 'r'
      scope: keyword.control.loop.for.helv
    - match: 'h'
      scope: keyword.control.flow.return.helv
    - match: 'p'
      #scope: support.function.helv
    - match: '[a-z]'

  semicolon_word:
    - include: semicolon_chars
    - match: '(?![a-z0-9+\-*/%])'
      pop: true

  semicolon_mode:
    - include: semicolon_compatible_main
    - include: semicolon_chars
    - match: ';;'
      scope: punctuation.section.block.end.helv keyword.declaration.function.helv
      pop: true
    - match: ';' # may be removed ?
      scope: keyword.declaration.function.helv

  single_quoted_string:
    - meta_scope: string.quoted.single.helv
    - match: \'
      scope: punctuation.definition.string.end.helv
      pop: true
